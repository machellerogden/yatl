#!/usr/bin/env node
"use strict";module.exports=read;const{EOL}=require("os"),isDefined=a=>null!=a,isAlpha=a=>isDefined(a)&&/[a-z]/i.test(a),isDash=a=>"-"===a,isDot=a=>"."===a,isDotForm=a=>isDot(a)||isDash(a),isString=a=>isDefined(a)&&/[a-z\?!\-\/"\.]/i.test(a),isStringQuote=a=>"\""===a,isQuote=a=>"`"===a,isMacro=a=>"~"===a,isNumber=a=>isDefined(a)&&/[0-9]/i.test(a),isListStart=a=>["(","["].includes(a),isListEnd=a=>[")","]"].includes(a),isWhitespace=a=>/[\s\,]/.test(a),isComment=a=>";"===a,isEOL=a=>a===EOL;function read(a){const b=a.split(""),c=[];let d=0;const e=()=>b.splice(d,1),f=()=>d++,g=[c],h=()=>g[g.length-1],j=a=>(h().push(a),a),k=a=>(f(),g.push(j(a)),a),l=()=>(f(),g.pop()),m=()=>h().$quoted&&g.pop(),n=()=>h().$macro&&g.pop();for(;d<b.length;){if(isListStart(b[d])){k([]);continue}if(isListEnd(b[d])){l(),m(),n();continue}if(isQuote(b[d])){k([b[d]]),h().$quoted=!0;continue}if(isMacro(b[d])){isQuote(b[d-1])?(j(b[f()]),l()):(k([b[d]]),h().$macro=!0);continue}if(isDot(b[d])){isDotForm(b[d+1])?j(b[f()]+b[f()]):j(b[f()]);continue}if(isDash(b[d])){let a=b[f()];if(isAlpha(b[d]))for(;isString(b[d])||isNumber(b[d]);)a+=b[f()];j(a);continue}if(isWhitespace(b[d])){e();continue}if(isNumber(b[d])){let a="";for(;isNumber(b[d]);)a+=b[f()];j(+a);continue}if(isStringQuote(b[d])){let a="";for(f();!isStringQuote(b[d]);)a+=b[f()];f(),a=`"${a}"`,j(a);continue}if(isComment(b[d])){for(e();!isEOL(b[d]);)e();e();continue}if(isAlpha(b[d])){let a="";for(;isString(b[d])||isNumber(b[d]);)a+=b[f()];"true"===a?j(!0):"false"===a?j(!1):j(a),m(),n();continue}j(b[f()])}return["do",...c]}require.main===module&&(process.argv[2]?console.log(JSON.stringify(read(require("fs").readFileSync(process.argv[2],"utf8")),null,4)):require("repl").start({eval:(a,b,c,d)=>d(null,read(a)),writer:JSON.stringify}));